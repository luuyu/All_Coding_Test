#%%
import imp


x = '123'
y = '123'
x is y

# %%
x = [1, 2, 3]
y = [1, 2, 3]
x is y 

# %%
#####################
## python 对不同类型对象存储机制不一样，列表是动态的 要开辟不同空间
####################
A = [0] * 3
for i in range(3):
    A[i] = [0] * 3
B = [[0] * 3] * 3
""" * 只是拷贝了列表的引用，并未进行物理拷贝，实际上还是指向同一个空间"""


# %%
C = [[]] * 3
print(C)
for i in range(3):
    C[i] = [1] * 3
C 
# %%
D = [[]] * 3
D

# %%
x = [[1,2,3],
     [4,5,6],
     [7,8,9]]
y = x.copy()
x[1][1] = 0
#####################
## 对于嵌套列表，浅拷贝只是对其引用而不是复制产生一个新的空间，修改原列表的值还是会引起新列表值的变化
#####################

# %%
"""深拷贝"""
import copy
# y = copy.copy(x) #浅拷贝
y = copy.deepcopy(x)
x[1][2] = 2

# %%
########################
## 列表推导式： [expression for target in iterable]
########################
x = [1, 2, 3, 4, 5]
y = [i * 2 for i in x] #速度比循环快上一倍

# %%
matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]]
s = [matrix[i][i] for i in range(len(matrix))]

# %%
a = [matrix[i][len(matrix)- 1- i] for i in range(len(matrix))]
# %%
